/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment;



import javax.swing.*;  
import java.io.File;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author leelynnchanel
 */
public class Register extends javax.swing.JFrame {
    @SuppressWarnings("FieldNameHidesFieldInSuperclass")
    ArrayList<Users> ArrayUser = new ArrayList<>();

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRegister1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtFName = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtLName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cbUser = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        txtPassword = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtNumber = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblNumber = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtReenterPassword = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();

        lblRegister1.setFont(new java.awt.Font("Kohinoor Bangla", 0, 14)); // NOI18N
        lblRegister1.setForeground(new java.awt.Color(153, 153, 153));
        lblRegister1.setText("Administration");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel11.setBackground(new java.awt.Color(153, 102, 0));
        jLabel11.setFont(new java.awt.Font("Kohinoor Bangla", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 0, 0));
        jLabel11.setText("Last Name");

        jLabel13.setBackground(new java.awt.Color(153, 102, 0));
        jLabel13.setFont(new java.awt.Font("Kohinoor Bangla", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 0, 0));
        jLabel13.setText("First Name");

        btnReset.setBackground(new java.awt.Color(200, 194, 175));
        btnReset.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(153, 102, 0));
        jLabel14.setFont(new java.awt.Font("Kohinoor Bangla", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(153, 0, 0));
        jLabel14.setText("Username");

        jLabel15.setBackground(new java.awt.Color(153, 102, 0));
        jLabel15.setFont(new java.awt.Font("Kohinoor Bangla", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(153, 0, 0));
        jLabel15.setText("User type");

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setForeground(new java.awt.Color(153, 102, 0));
        jPanel6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPanel6FocusLost(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(153, 102, 0));
        jLabel12.setFont(new java.awt.Font("Kohinoor Bangla", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 51, 0));
        jLabel12.setText("New Registration ");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jButton1))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        cbUser.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        cbUser.setForeground(new java.awt.Color(153, 0, 0));
        cbUser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Customer", "Admin" }));

        btnSave.setBackground(new java.awt.Color(200, 194, 175));
        btnSave.setFont(new java.awt.Font("Kohinoor Bangla", 1, 13)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel18.setBackground(new java.awt.Color(153, 102, 0));
        jLabel18.setFont(new java.awt.Font("Kohinoor Bangla", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(153, 0, 0));
        jLabel18.setText("Password");

        jLabel19.setBackground(new java.awt.Color(153, 102, 0));
        jLabel19.setFont(new java.awt.Font("Kohinoor Bangla", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(153, 0, 0));
        jLabel19.setText("Phone Number");

        lblName.setForeground(new java.awt.Color(204, 0, 51));

        lblUsername.setForeground(new java.awt.Color(204, 0, 51));

        lblEmail.setForeground(new java.awt.Color(204, 0, 51));

        lblNumber.setForeground(new java.awt.Color(204, 0, 51));

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel20.setBackground(new java.awt.Color(153, 102, 0));
        jLabel20.setFont(new java.awt.Font("Kohinoor Bangla", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(153, 0, 0));
        jLabel20.setText("Email");

        jLabel22.setBackground(new java.awt.Color(153, 102, 0));
        jLabel22.setFont(new java.awt.Font("Kohinoor Bangla", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(153, 0, 0));
        jLabel22.setText("Re-enter Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(cbUser, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtReenterPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName)
                    .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblUsername)
                .addGap(20, 20, 20)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReenterPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumber))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnReset))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
       File fPath = new File("/Users/leelynnchanel/Desktop/3rd Semester/Java/Assignment/CustomerData.txt");
       File fPath2 = new File("/Users/leelynnchanel/Desktop/3rd Semester/Java/Assignment/AdminData.txt");

    
    private void Reset() {
        txtFName.setText("");
        txtLName.setText("");
        cbUser.setSelectedIndex(0);
        txtUsername.setText("");
        txtPassword.setText("");
        txtReenterPassword.setText("");
        txtNumber.setText("");
    }
   
   
   
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        Reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void jPanel6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel6FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel6FocusLost

    public static boolean validateName (String name){
    return Pattern.matches("[a-zA-Z]+",name);
    }
    
    public static boolean validateEmail(String email) {
     String emailRegex = "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$";
     Pattern emailPat = Pattern.compile(emailRegex, Pattern.CASE_INSENSITIVE);
     Matcher matcher = emailPat.matcher(email);
     return matcher.find();
    }
    
     public static boolean validatePhone(String phone) {
     return phone.charAt(0) == '0' && phone.charAt(1) == '1' && phone.length() == 10 || phone.length() == 11 && phone.matches("[0-9+]");
    }
     
     public static boolean validateUsername(String name)
    {
        String regex = "^[A-Za-z]\\w{5,29}$";
  
        Pattern usernamePattern = Pattern.compile(regex);
  
        // username is empty return false
        if (name == null) {
            return false;
        }
  
       
        Matcher matcher = usernamePattern.matcher(name);
  
        return matcher.matches();
    }
     
     
  public void setForm () throws IOException {
      if (cbUser.getSelectedItem().toString() == "Customer"){
           File f = new File("CustomerData.txt");
                if (!f.exists()){
                    try {
                        f.createNewFile();
                    } catch (IOException ex) {
                        Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            String Name = txtFName.getText() + " " + txtLName.getText();
            //adding data to customer class
            CustomerClass newCustomer = new CustomerClass(Name, txtUsername.getText(), txtEmail.getText(), txtNumber.getText(), txtPassword.getText());
            ArrayUser.add(newCustomer); 

            FileWriter cuswriter = new FileWriter("CustomerData.txt", true);
            cuswriter.write(newCustomer.getName() + "," + newCustomer.getUsername() + "," + newCustomer.getEmail() + "," + newCustomer.getNumber() + "," +  newCustomer.getPassword() + "\n");              
            cuswriter.close();
      } else{
          File f = new File("AdminData.txt");
                if (!f.exists()){
                    try {
                        f.createNewFile();
                    } catch (IOException ex) {
                        Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            String Name = txtFName.getText().toString() + " " + txtLName.getText().toString();
            //adding data to customer class

            AdminClass newAdmin = new AdminClass(Name, txtUsername.getText(), txtEmail.getText(), txtNumber.getText(), txtPassword.getText());
            ArrayUser.add(newAdmin); 
            
            FileWriter adwriter = new FileWriter("AdminData.txt", true);
            adwriter.write(newAdmin.getName() + "," + newAdmin.getUsername() + "," + newAdmin.getEmail() + "," + newAdmin.getNumber() + "," +  newAdmin.getPassword() +  "\n" );              
            adwriter.close();
            
            
            System.out.println(newAdmin.getName());
            System.out.println(newAdmin.getUsername());
            System.out.println(newAdmin.getEmail());
            System.out.println(newAdmin.getNumber());
             System.out.println(newAdmin.getPassword());
      }
      
  }
  
  private boolean usernameNotExist () {
       try{
           if (cbUser.getSelectedItem().toString() == "Customer") {
            BufferedReader br = new BufferedReader(new FileReader(fPath)); 
            Object[] Lines = br.lines().toArray();
            int i = 0;
            for (i = 0; i < Lines.length; i ++){
                String Line = Lines[i].toString().trim();
                String[] Row = Line.split(",");
                System.out.println("row = "+ Row[1]);
                System.out.println("line = "+Line);
                if (txtUsername.getText().equals(Row[1])) {
                    return false;
                }
            }
           } else{
            BufferedReader br = new BufferedReader(new FileReader(fPath2)); 
            Object[] Lines = br.lines().toArray();
            int i = 0;
            for (i = 0; i < Lines.length; i ++){
                String Line = Lines[i].toString().trim();
                String[] Row = Line.split(",");
                System.out.println("row = "+ Row[1]);
                System.out.println("line = "+Line);
                if (txtUsername.getText().equals(Row[1])) {
                    return false;
                }
            }
           }
       }
       catch (Exception ex){
           ex.printStackTrace();
       }
        return true;
   }
  
  private boolean emailNotExist () {
       try{
           if (cbUser.getSelectedItem().toString() == "Customer") {
            BufferedReader br = new BufferedReader(new FileReader(fPath)); 
            Object[] Lines = br.lines().toArray();
            int i = 0;
            for (i = 0; i < Lines.length; i ++){
                String Line = Lines[i].toString().trim();
                String[] Row = Line.split(",");
                System.out.println("row = "+ Row[2]);
                System.out.println("line = "+Line);
                if (txtEmail.getText().equals(Row[2])) {
                    return false;
                }
            }
           } else {
            BufferedReader br = new BufferedReader(new FileReader(fPath2)); 
            Object[] Lines = br.lines().toArray();
            int i = 0;
            for (i = 0; i < Lines.length; i ++){
                String Line = Lines[i].toString().trim();
                String[] Row = Line.split(",");
                System.out.println("row = "+ Row[2]);
                System.out.println("line = "+Line);
                if (txtEmail.getText().equals(Row[2])) {
                    return false;
                }
            }
           }
       }
       catch (Exception ex){
           ex.printStackTrace();
       }
        return true;
   }
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (txtFName.getText().isEmpty() || txtLName.getText().isEmpty() || txtUsername.getText().isEmpty() || txtPassword.getText().isEmpty() || txtNumber.getText().isEmpty() || txtEmail.getText().isEmpty() || cbUser.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(this,"Missing Information. Please re-try.");
            System.out.println("invalid first name");

        } else if (validateName(txtFName.getText()) == false || validateName(txtLName.getText()) == false )
        {
            lblName.setText("Invalid Name.");
            System.out.println("invalid last name");
        }else if (validateEmail(txtEmail.getText().toString()) == false )
        {
            lblEmail.setText("Invalid Email.");
            System.out.println("invalid email");
        }else if (validatePhone(txtNumber.getText()) == false )
        {
            
            lblNumber.setText("Invalid Phone Number.");
            System.out.println("invalid number");
        }else if (validateUsername(txtUsername.getText().toString()) == false )
        { 
            lblUsername.setText("Invalid Username.");
            JOptionPane.showMessageDialog(this,"Invalid Username. Please make sure your username starts with a letter and consists of 6 - 30 characters excluding special characters.");
            System.out.println("invalid username");
        } else if ((txtPassword.getText().toString().equals(txtReenterPassword.getText().toString())) == false)
        {
            JOptionPane.showMessageDialog(this,"Invalid. Please make sure your password and re-enter password are the same.");
                        System.out.println("not the same password");
                        System.out.println(txtPassword.getText().toString() == txtReenterPassword.getText().toString());
                        System.out.println(txtPassword.getText().toString() );
                                                System.out.println(txtReenterPassword.getText().toString() );


        } else if (validateUsername(txtPassword.getText()) == false || validateUsername(txtReenterPassword.getText()) == false )
        {
            JOptionPane.showMessageDialog(this,"Invalid Password. Please make sure your pasword starts with a letter and consists of 6 - 30 characters excluding special characters.");
            System.out.println("invalid password");
        } else if (usernameNotExist() == false) {
                    JOptionPane.showMessageDialog(this,"Username already exist. Please enter a new username.");
        } else if (emailNotExist() == false) {
                    JOptionPane.showMessageDialog(this,"Email already exist. Please enter a new email.");
        }
        else{
            System.out.println();
            try{
            setForm ();
            JOptionPane.showMessageDialog(this, "Registration Successful.");
            
            txtFName.setText("");
            txtLName.setText("");
            txtEmail.setText("");
            txtUsername.setText("");
            txtPassword.setText("");
            txtReenterPassword.setText("");
            txtNumber.setText("");
             
            if (cbUser.getSelectedItem().toString() == "Customer") {
             new LoginCus().setVisible(true);
            this.setVisible(false);
            } else{
            new Login().setVisible(true);
            this.setVisible(false);
            }
            }
            catch (IOException ex) {
                        Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
                    }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new Login().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbUser;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNumber;
    private javax.swing.JLabel lblRegister1;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFName;
    private javax.swing.JTextField txtLName;
    private javax.swing.JTextField txtNumber;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtReenterPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
